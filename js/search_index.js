var search_data = {"index":{"longSearchIndex":["apache","apache::imageresizer","apache::imageresizer::util","apache::imageresizer::version","apache::imageresizer::util#do_magick()","apache::imageresizer::util#extract_directives()","apache::imageresizer::util#get_paths()","apache::imageresizer#handler()","apache::imageresizer::util#log()","apache::imageresizer::util#log_err()","apache::imageresizer::util#mkdir_for()","apache::imageresizer::new()","apache::imageresizer::util#parse_url()","apache::imageresizer::util#resize()","apache::imageresizer::util#resize_url()","apache::imageresizer::util#secure_resize_url()","apache::imageresizer::util#send_image()","apache::imageresizer::version::to_a()","apache::imageresizer::version::to_s()","apache::imageresizer::util#url_for()","","",""],"info":[["Apache","","Apache.html","",""],["Apache::ImageResizer","","Apache/ImageResizer.html","",""],["Apache::ImageResizer::Util","","Apache/ImageResizer/Util.html","",""],["Apache::ImageResizer::Version","","Apache/ImageResizer/Version.html","",""],["do_magick","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-do_magick","(what, value, block)",""],["extract_directives","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-extract_directives","(path)",""],["get_paths","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-get_paths","(request, path, base, prefix, source_dir, target_dir, proxy_cache, secret)",""],["handler","Apache::ImageResizer","Apache/ImageResizer.html#method-i-handler","(request, &block)","<p>If the current <code>request</code> asked for a resource that’s not\nthere, it will be checked for resize directives …\n"],["log","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-log","(level = 1, loc = 0, trace = nil)",""],["log_err","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-log_err","(err, msg = nil)",""],["mkdir_for","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-mkdir_for","(path)",""],["new","Apache::ImageResizer","Apache/ImageResizer.html#method-c-new","(options = {})","<p>Creates a new RubyHandler instance for the Apache web server. It is to be\ninstalled as a custom 404  …\n"],["parse_url","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-parse_url","(url, base, prefix_re, &block)",""],["resize","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-resize","(source, target, directives, enlarge, &block)",""],["resize_url","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-resize_url","(size = DEFAULT_SOURCE_DIR, *path)",""],["secure_resize_url","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-secure_resize_url","(secret, args = [], options = {})",""],["send_image","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-send_image","(request, target, img = nil)",""],["to_a","Apache::ImageResizer::Version","Apache/ImageResizer/Version.html#method-c-to_a","()","<p>Returns array representation.\n"],["to_s","Apache::ImageResizer::Version","Apache/ImageResizer/Version.html#method-c-to_s","()","<p>Short-cut for version string.\n"],["url_for","Apache::ImageResizer::Util","Apache/ImageResizer/Util.html#method-i-url_for","(url, sec = nil, opt = {})",""],["COPYING","","COPYING.html","","<p>License for apache_image_resizer\n\n<pre>                    GNU AFFERO GENERAL PUBLIC LICENSE\n               ...</pre>\n"],["ChangeLog","","ChangeLog.html","","<p>Revision history for apache_image_resizer\n<p>0.0.1 [2011-10-11]\n<p>Birthday :-)\n"],["README","","README.html","","<p>apache_image_resizer - Apache module providing image resizing functionality.\n<p>VERSION\n<p>This documentation …\n"]],"searchIndex":["apache","imageresizer","util","version","do_magick()","extract_directives()","get_paths()","handler()","log()","log_err()","mkdir_for()","new()","parse_url()","resize()","resize_url()","secure_resize_url()","send_image()","to_a()","to_s()","url_for()","copying","changelog","readme"]}}